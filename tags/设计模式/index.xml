<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>设计模式 - Tag -</title><link>https://blog.yudlk.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link><description>设计模式 - Tag -</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>qupengtao0116@163.com (qpt)</managingEditor><webMaster>qupengtao0116@163.com (qpt)</webMaster><lastBuildDate>Tue, 25 Dec 2018 22:00:00 +0000</lastBuildDate><atom:link href="https://blog.yudlk.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/" rel="self" type="application/rss+xml"/><item><title>Java常用设计模式(十)---观察者模式</title><link>https://blog.yudlk.com/posts/java/design-pattern/10-observer/</link><pubDate>Tue, 25 Dec 2018 22:00:00 +0000</pubDate><author>qpt</author><guid>https://blog.yudlk.com/posts/java/design-pattern/10-observer/</guid><description>&lt;p>本文主要介绍了Java23种设计模式中的观察者模式，并结合实例描述了观察者模式的具体实现和优缺点分析。&lt;/p></description></item><item><title>Java常用设计模式(九)---模板方法模式</title><link>https://blog.yudlk.com/posts/java/design-pattern/09-template/</link><pubDate>Sun, 23 Dec 2018 22:00:00 +0000</pubDate><author>qpt</author><guid>https://blog.yudlk.com/posts/java/design-pattern/09-template/</guid><description>&lt;p>本文主要介绍了Java23种设计模式中的模板方法模式，并结合实例描述了模板方法模式的具体实现和优缺点分析。&lt;/p></description></item><item><title>Java常用设计模式(八)---策略模式</title><link>https://blog.yudlk.com/posts/java/design-pattern/08-strategy/</link><pubDate>Wed, 19 Dec 2018 22:00:00 +0000</pubDate><author>qpt</author><guid>https://blog.yudlk.com/posts/java/design-pattern/08-strategy/</guid><description>&lt;p>本文主要介绍了Java23种设计模式中的策略模式，并结合实例描述了策略模式的具体实现和策略模式的优缺点分析。&lt;/p></description></item><item><title>Java常用设计模式(七)---外观模式</title><link>https://blog.yudlk.com/posts/java/design-pattern/07-facade/</link><pubDate>Mon, 17 Dec 2018 22:00:00 +0000</pubDate><author>qpt</author><guid>https://blog.yudlk.com/posts/java/design-pattern/07-facade/</guid><description>&lt;p>本文主要介绍了Java23种设计模式中的外观模式，并结合实例描述了 模式的具体实现和性能分析测试。&lt;/p></description></item><item><title>Java常用设计模式(六)---代理模式</title><link>https://blog.yudlk.com/posts/java/design-pattern/06-proxy/</link><pubDate>Wed, 05 Dec 2018 22:00:00 +0000</pubDate><author>qpt</author><guid>https://blog.yudlk.com/posts/java/design-pattern/06-proxy/</guid><description><![CDATA[<p>本文主要介绍了Java23种设计模式中的代理模式，并结合实例描述了各种代理模式的具体实现和对比。包括：<code>JDK静态代理</code>，<code>JDK动态代理</code>，<code>cglib动态代理</code>.</p>]]></description></item><item><title>Java常用设计模式(五)---装饰者模式</title><link>https://blog.yudlk.com/posts/java/design-pattern/05-decorator/</link><pubDate>Sat, 01 Dec 2018 22:00:00 +0000</pubDate><author>qpt</author><guid>https://blog.yudlk.com/posts/java/design-pattern/05-decorator/</guid><description>&lt;p>本文主要介绍了Java23种设计模式中的装饰者模式，并结合实例描述了装饰者模式的具体实现和优缺点分析。&lt;/p></description></item><item><title>Java常用设计模式(四)---适配器模式</title><link>https://blog.yudlk.com/posts/java/design-pattern/04-adapter/</link><pubDate>Wed, 28 Nov 2018 22:00:00 +0000</pubDate><author>qpt</author><guid>https://blog.yudlk.com/posts/java/design-pattern/04-adapter/</guid><description>&lt;p>本文主要介绍了Java23种设计模式之适配器模式，并结合实例描述了适配器模式的具体实现和优缺点分析。&lt;/p></description></item><item><title>枚举式单例模式与序列化</title><link>https://blog.yudlk.com/posts/java/design-pattern/01ex1-java-enum-singleton/</link><pubDate>Sat, 24 Nov 2018 22:00:00 +0000</pubDate><author>qpt</author><guid>https://blog.yudlk.com/posts/java/design-pattern/01ex1-java-enum-singleton/</guid><description>&lt;p>本文主要记录了单例模式中的枚举式写法的序列化与反序列化安全问题，通过分析源码说明了为什么枚举式单例是序列化安全的。&lt;/p></description></item><item><title>Java常用设计模式(三)---建造者模式</title><link>https://blog.yudlk.com/posts/java/design-pattern/03--builder/</link><pubDate>Thu, 22 Nov 2018 22:00:00 +0000</pubDate><author>qpt</author><guid>https://blog.yudlk.com/posts/java/design-pattern/03--builder/</guid><description>&lt;p>本文主要介绍了Java23种设计模式中的&lt;code>建造者模式&lt;/code>，并结合实例描述了建造者模式的具体实现和优缺点及建造者模式和工厂模式的差别分析等。&lt;/p></description></item><item><title>Java设计模式(二)---工厂模式</title><link>https://blog.yudlk.com/posts/java/design-pattern/02--factory/</link><pubDate>Sun, 18 Nov 2018 22:00:00 +0000</pubDate><author>qpt</author><guid>https://blog.yudlk.com/posts/java/design-pattern/02--factory/</guid><description><![CDATA[<p>本章主要介绍了设计模式中的工厂模式，并结合实例描述了工厂模式的具体实现和使用场景。包括：<code>普通工厂模式</code>、<code>工厂方法模式</code>、<code>抽象工厂模式</code>等。</p>]]></description></item></channel></rss>