<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Tracing - Tag -</title><link>https://blog.yudlk.com/tags/tracing/</link><description>Tracing - Tag -</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>qupengtao0116@163.com (qpt)</managingEditor><webMaster>qupengtao0116@163.com (qpt)</webMaster><lastBuildDate>Fri, 13 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.yudlk.com/tags/tracing/" rel="self" type="application/rss+xml"/><item><title>分布式链路追踪教程(五)---Jaeger线上环境部署</title><link>https://blog.yudlk.com/posts/tracing/05-jaeger-deploy/</link><pubDate>Fri, 13 Nov 2020 00:00:00 +0000</pubDate><author>qpt</author><guid>https://blog.yudlk.com/posts/tracing/05-jaeger-deploy/</guid><description>&lt;p>本文主要记录了如何在生产环境中部署 Jaeger各个组件，包括 Agent、Collector、Query、Storage 等等。&lt;/p></description></item><item><title>分布式链路追踪教程(四)---Jaeger 在 gin框架和 gRPC 中的使用</title><link>https://blog.yudlk.com/posts/tracing/04-jaeger-gin-grpc/</link><pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate><author>qpt</author><guid>https://blog.yudlk.com/posts/tracing/04-jaeger-gin-grpc/</guid><description>&lt;p>本文通过简单的例子记录了如何在 gin 框架和 gRPC 中使用 Jaeger 进行链路追踪。&lt;/p></description></item><item><title>分布式链路追踪教程(二)---框架选型</title><link>https://blog.yudlk.com/posts/tracing/02-framework-compare/</link><pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate><author>qpt</author><guid>https://blog.yudlk.com/posts/tracing/02-framework-compare/</guid><description>&lt;p>本文主要对分布式链路追踪框架做了简单对比，包括 Zipkin、Jaeger等。&lt;/p></description></item><item><title>分布式链路追踪教程(一)---Opentracing 基本概念</title><link>https://blog.yudlk.com/posts/tracing/01-opentracing/</link><pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate><author>qpt</author><guid>https://blog.yudlk.com/posts/tracing/01-opentracing/</guid><description>&lt;p>在微服务架构的系统中，请求在各服务之间流转，调用链错综复杂，一旦出现了问题和异常，很难追查定位，这个时候就需要链路追踪来帮忙了。链路追踪系统能追踪并记录请求在系统中的调用顺序，调用时间等一系列关键信息，从而帮助我们定位异常服务和发现性能瓶颈。&lt;/p></description></item></channel></rss>