<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Network - Tag -</title><link>https://blog.yudlk.com/tags/network/</link><description>Network - Tag -</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>qupengtao0116@163.com (qpt)</managingEditor><webMaster>qupengtao0116@163.com (qpt)</webMaster><lastBuildDate>Sat, 03 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.yudlk.com/tags/network/" rel="self" type="application/rss+xml"/><item><title>Kubernetes教程(二)---集群网络之 Flannel 核心原理</title><link>https://blog.yudlk.com/posts/kubernetes/02-cluster-network/</link><pubDate>Sat, 03 Sep 2022 00:00:00 +0000</pubDate><author>qpt</author><guid>https://blog.yudlk.com/posts/kubernetes/02-cluster-network/</guid><description>&lt;p>本文主要记录了 Kubernetes 集群网络方案之 Flannel 核心原理详解，包括其隧道方案中的两种：UDP 实现和 VXLAN 实现。&lt;/p></description></item><item><title>一次HTTP(S)请求究竟需要多少流量?Wireshark抓包分析</title><link>https://blog.yudlk.com/posts/network/06-http-flow/</link><pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate><author>qpt</author><guid>https://blog.yudlk.com/posts/network/06-http-flow/</guid><description>&lt;p>本文主要通过 Wireshark 抓包分析了一次 HTTP(S) 请求究竟需要多少流量，同时也分析了一下整个 HTTP 请求的执行流程。&lt;/p></description></item><item><title>计算机网络(五)---从输入URL到页面加载的过程中发生了什么</title><link>https://blog.yudlk.com/posts/network/05-connection-process/</link><pubDate>Tue, 29 Jan 2019 22:00:00 +0000</pubDate><author>qpt</author><guid>https://blog.yudlk.com/posts/network/05-connection-process/</guid><description><![CDATA[<p>本文主要对用户从浏览器输入URL到页面加载的这一过程进行了具体分析与叙述。包括：<code>DNS解析</code>、<code>发送HTTP请求</code>、<code>TCP连接</code>、<code>服务器响应</code>、<code>浏览器解析渲染页面</code>等。</p>]]></description></item><item><title>计算机网络(四)---HTTP与HTTPS</title><link>https://blog.yudlk.com/posts/network/04-http-https/</link><pubDate>Thu, 24 Jan 2019 22:00:00 +0000</pubDate><author>qpt</author><guid>https://blog.yudlk.com/posts/network/04-http-https/</guid><description><![CDATA[<p>本文主要介绍了<code>HTTP</code>、<code>HTTPS</code>的基本概念及两者的区别，<code>HTTPS</code>的工作原理及优缺点，最后介绍了HTTP的响应状态码。</p>]]></description></item><item><title>计算机网络(三)--TCP如何保证传输可靠性</title><link>https://blog.yudlk.com/posts/network/03-tcp-reliability/</link><pubDate>Fri, 18 Jan 2019 22:00:00 +0000</pubDate><author>qpt</author><guid>https://blog.yudlk.com/posts/network/03-tcp-reliability/</guid><description><![CDATA[<p>本文主要叙述了TCP协议是如何保证传输的可靠性的，主要保证手段包括：<code>序列号</code>、<code>校验和</code>、<code>流量控制</code>、<code>拥塞控制</code>、<code>停止等待协议</code>、<code>超时重传</code>、<code>连接管理</code>等。</p>]]></description></item><item><title>计算机网络(二)---TCP三次握手四次挥手</title><link>https://blog.yudlk.com/posts/network/02-tcp-connection/</link><pubDate>Tue, 08 Jan 2019 22:00:00 +0000</pubDate><author>qpt</author><guid>https://blog.yudlk.com/posts/network/02-tcp-connection/</guid><description>&lt;p>本文主要介绍了&lt;code>TCP&lt;/code>的三次握手和四次挥手具体步骤及其原因分析。&lt;/p></description></item><item><title>计算机网络(一)---OSI七层模型</title><link>https://blog.yudlk.com/posts/network/01-network-model/</link><pubDate>Thu, 03 Jan 2019 22:00:00 +0000</pubDate><author>qpt</author><guid>https://blog.yudlk.com/posts/network/01-network-model/</guid><description><![CDATA[<p>本文主要通过OSI七层模型与常用TCP/IP5层模型介绍了各层的主要作用，包括<code>应用层</code>，<code>运输层</code>，<code>网络层</code>，<code>数据链路层</code>，<code>物理层</code>等。</p>]]></description></item></channel></rss>